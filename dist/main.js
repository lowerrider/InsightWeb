/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "\\\\OMP.LOCAL\\File\\UP\\hajbaliev.rm\\Desktop\\Insight\\InsightWeb/index.js":
/*!****************************************************************************!*\
  !*** \\OMP.LOCAL\File\UP\hajbaliev.rm\Desktop\Insight\InsightWeb/index.js ***!
  \****************************************************************************/
/***/ (() => {

eval("// import { Application } from \"@splinetool/runtime\";\r\n\r\n// const canvas = document.getElementById(\"canvas3d\");\r\n// const app = new Application(canvas);\r\n// const cyberBtns = document.getElementsByClassName(\"cybrBtn\");\r\n// const cyberTitles = document.getElementsByClassName(\"cyber-tile\");\r\n// const barOrangeRight = document.getElementById(\"barOrangeRight\");\r\n// const barOrangeLeft = document.getElementById(\"barOrangeLeft\");\r\n\r\n// app\r\n//   .load(\"https://prod.spline.design/4Vjf8RHWzTuYKdiG/scene.splinecode\")\r\n//   .then(() => {\r\n//     const object = app.findObjectByName(\"Group\");\r\n\r\n//     app.emitEvent(\"start\");\r\n\r\n//     gsap.set(object.scale, { x: 1, y: 1, z: 1 });\r\n//     gsap.set(object.position, { x: 110, y: 50 });\r\n\r\n//     let rotateobject = gsap.to(object.rotation, {\r\n//       y: Math.PI * 2 + object.rotation.y,\r\n//       x: 0,\r\n//       z: 0,\r\n//       duration: 10,\r\n//       repeat: -1,\r\n//       ease: \"none\",\r\n//     });\r\n\r\n//     let rotationProgress = 0;\r\n\r\n//     gsap\r\n//       .timeline({\r\n//         scrollTrigger: {\r\n//           trigger: \"#part1\",\r\n//           start: \"top 60%\",\r\n//           end: \"bottom bottom\",\r\n//           scrub: true,\r\n//           onEnter: () => {\r\n//             rotationProgress = rotateobject.progress();\r\n\r\n//             rotateobject.pause();\r\n//             gsap.to(object.rotation);\r\n//           },\r\n//           onLeaveBack: () => {\r\n//             const newProgress = object.rotation.y / (Math.PI * 2);\r\n//             rotateobject.progress(newProgress).resume();\r\n//           },\r\n//         },\r\n//       })\r\n//       .to(object.rotation, { x: -Math.PI / 14, z: Math.PI / 36 }, 0)\r\n//       .to(object.position, { x: -500, y: -200 }, 0)\r\n//       .to(object.scale, { x: 3, y: 3, z: 3 }, 0);\r\n\r\n//     gsap\r\n//       .timeline({\r\n//         scrollTrigger: {\r\n//           trigger: \"#part2\",\r\n//           start: \"top bottom\",\r\n//           end: \"center bottom\",\r\n//           scrub: true,\r\n//         },\r\n//       })\r\n//       .to(object.rotation, { x: Math.PI / 36, y: -Math.PI / 10 }, 0)\r\n//       .to(object.position, { x: 150, y: 50 }, 0)\r\n//       .to(object.scale, { x: 0.8, y: 0.8, z: 0.8 }, 0);\r\n\r\n//     gsap\r\n//       .timeline({\r\n//         scrollTrigger: {\r\n//           trigger: \"#part3\",\r\n//           start: \"top bottom\",\r\n//           end: \"bottom bottom\",\r\n//           scrub: true,\r\n//         },\r\n//       })\r\n//       .to(object.position, { x: 0, y: 0 }, 0);\r\n//   });\r\n\r\n// NEW ANIMATION\r\n\r\n// second ANIMATION\r\n\r\n// import { Application } from \"@splinetool/runtime\";\r\n\r\n// const canvas = document.getElementById(\"canvas3d\");\r\n// const app = new Application(canvas);\r\n// app.load(\"https://prod.spline.design/SwGUf5Yv7x5imq22/scene.splinecode\");\r\n\r\n// second ANIMATION\r\n\r\n// NEW ANIMATION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n// import { Application } from \"@splinetool/runtime\";\r\n\r\n// const canvas = document.getElementById(\"canvas3d\");\r\n// const app = new Application(canvas);\r\n// app.load(\"https://prod.spline.design/Zv5ex1qCxfwDEjRx/scene.splinecode\");\r\n\r\n// background progress bar\r\n// function animateBar(triggerElement, onEnterWidth, onLeaveBackWidth, className) {\r\n//   gsap.to(className, {\r\n//     scrollTrigger: {\r\n//       trigger: triggerElement,\r\n//       start: \"bottom bottom\",\r\n//       end: \"bottom bottom\",\r\n//       scrub: true,\r\n\r\n//       onEnter: () => {\r\n//         gsap.to(className, {\r\n//           width: onEnterWidth,\r\n//           duration: 0.2,\r\n//           ease: \"none\",\r\n//         });\r\n//       },\r\n//       onLeaveBack: () => {\r\n//         gsap.to(className, {\r\n//           width: onLeaveBackWidth,\r\n//           duration: 0.2,\r\n//           ease: \"none\",\r\n//         });\r\n//       },\r\n\r\n//     },\r\n//   });\r\n// }\r\n\r\n// animateBar(\"#hero\", \"35%\", \"0%\", \".barOrangeRight\");\r\n// animateBar(\"#part1\", \"0%\", \"35%\", \".barOrangeRight\");\r\n// animateBar(\"#part2\", \"0%\", \"0%\", \".barOrangeRight\");\r\n\r\n// animateBar(\"#hero\", \"0%\", \"0%\", \".barOrangeLeft\");\r\n// animateBar(\"#part1\", \"55%\", \"0%\", \".barOrangeLeft\");\r\n// animateBar(\"#part2\", \"0%\", \"55%\", \".barOrangeLeft\");\r\n\r\n// const swiper = new Swiper(\".swiper-container\", {\r\n//   autoplay: {\r\n//     delay: 5000,\r\n//   },\r\n//   effect: \"coverflow\",\r\n//   grabCursor: true,\r\n//   centeredSlides: true,\r\n//   slidesPerView: \"auto\",\r\n//   coverflowEffect: {\r\n//     rotate: 20,\r\n//     stretch: 0,\r\n//     depth: 350,\r\n//     modifier: 1,\r\n//     slideShadows: true,\r\n//   },\r\n//   pagination: {\r\n//     el: \".swiper-pagination\",\r\n//   },\r\n// });\r\n\n\n//# sourceURL=webpack:///\\\\OMP.LOCAL\\File\\UP\\hajbaliev.rm\\Desktop\\Insight\\InsightWeb/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["\\\\OMP.LOCAL\\File\\UP\\hajbaliev.rm\\Desktop\\Insight\\InsightWeb/index.js"]();
/******/ 	
/******/ })()
;